dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)

AC_INIT([poedit], [1.3.1], [vslavik@fastmail.fm])

AC_CONFIG_AUX_DIR([admin])
AC_CONFIG_SRCDIR([README])

AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

dnl cross-compiling support: we're cross compiling if the build system is
dnl different from the target one (assume host and target be always the same)
if test "$build" != "$host" ; then
    CC=$host_alias-gcc
    CXX=$host_alias-c++
    AR=$host_alias-ar
    RANLIB=$host_alias-ranlib
    DLLTOOL=$host_alias-dlltool
    RESCOMP=$host_alias-windres
    LD=$host_alias-ld
    NM=$host_alias-nm
    STRIP=$host_alias-strip
else
    RESCOMP=windres
fi

AM_INIT_AUTOMAKE
AM_MAINTAINER_MODE

AM_OPTIONS_WXCONFIG

AC_ARG_ENABLE(transmem,
              AS_HELP_STRING([--enable-transmem],
                             [Enable translation memory (default: yes)]),
              USE_TRANSMEM="$enableval", USE_TRANSMEM="yes")
AC_ARG_ENABLE(spellchecking,
              AS_HELP_STRING([--enable-spellchecking],
                             [Enable spell checking (default: yes)]),
              USE_SPELLCHECKING="$enableval", USE_SPELLCHECKING="yes")
AC_ARG_ENABLE(debug,
              AS_HELP_STRING([--enable-debug],
                             [Enable debugging information]),
              USE_DEBUG="$enableval", USE_DEBUG="no")
AC_ARG_ENABLE(semistatic,
              AS_HELP_STRING([--enable-semistatic],
                             [Link statically against wxWindows and libdb]),
              USE_SEMISTATIC="$enableval", USE_SEMISTATIC="no")

AC_MSG_CHECKING(for install location)
case "$prefix" in
NONE)	AC_CACHE_VAL(m_cv_prefix,m_cv_prefix=$ac_default_prefix);;
*)	m_cv_prefix=$prefix ;;
esac
AC_MSG_RESULT($m_cv_prefix)
case "$m_cv_prefix" in /*) ;; *)
	AC_MSG_WARN([--prefix=$prefix must be an absolute path name, using $ac_default_prefix])
	m_cv_prefix=$ac_default_prefix
esac
prefix=$m_cv_prefix


dnl Checks for programs.
AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB
AC_PROG_CC
AC_PROG_CXX
AC_PROG_CXXCPP
AC_LANG_CPLUSPLUS


AC_ARG_VAR(ZIP, Path to zip executable)
AC_PATH_PROG(ZIP, zip, [])
if test x$ZIP = x ; then
    AC_MSG_ERROR([ZIP archiver is needed to compile poEdit.])
fi



case "$USE_DEBUG" in
yes)	DEBUG_FLAGS="-g -Wall -O0"
    ;;    
esac

AM_PATH_WXCONFIG(2.4.1, WXFOUND=1)

if test "$WXFOUND" != 1; then
    AC_MSG_ERROR([
        Please check that wx-config is in path, the directory
        where wxWindows libraries are installed (returned by
        'wx-config --libs' command) is in LD_LIBRARY_PATH or
        equivalent variable and wxWindows is version 2.4.1 or above.
    ])
fi

dnl Check if wxWidgets includes XRC library and if it does, don't build it
dnl ourselves:
AC_MSG_CHECKING([if wxWidgets includes XRC])
saved_CXXFLAGS="$CXXFLAGS"
CXXFLAGS="$CXXFLAGS $WX_CXXFLAGS"
AC_TRY_COMPILE([#include <wx/defs.h>],
               [
                #if !wxCHECK_VERSION(2,5,3)
                    #error "wxWidgets too old, XRC not included in the core"
                #endif
                #if !wxUSE_XRC
                    #error "XRC not compiled in"
                #endif
               ],
               [includes_xrc=yes],
               [includes_xrc=no])
AC_MSG_RESULT($includes_xrc)
AM_CONDITIONAL([BUILD_XRC], [test $includes_xrc = no])
CXXFLAGS="$saved_CXXFLAGS"


CXXFLAGS="$CXXFLAGS $WX_CXXFLAGS"


if test "$USE_SPELLCHECKING" != "no" ; then
    dnl we need GtkSpell and GTK+ 2.x for this, check if we're compatible
    PKG_CHECK_MODULES([GTKSPELL], [gtkspell-2.0],
        [
            AC_MSG_CHECKING([if wxWidgets toolkit uses GTK+ 2])
            AC_TRY_COMPILE([#include <wx/defs.h>],
                [
                    #ifndef __WXGTK20__
                        #error "not GTK+ 2"
                    #endif
                ],
                [
                    AC_MSG_RESULT([yes])
                    CXXFLAGS="$CXXFLAGS $GTKSPELL_CFLAGS"
                    LIBS="$LIBS $GTKSPELL_LIBS"
                    AC_DEFINE(USE_SPELLCHECKING)
                ],
                [
                
                    AC_MSG_RESULT([no])
                    USE_SPELLCHECKING="no"
                    AC_MSG_WARN([disabling spellchecking because GTK+ 2 is required by it])
                ])
        ],
        [
            USE_SPELLCHECKING="no"
            AC_MSG_WARN([disabling spellchecking because GtkSpell is missing])
        ])
fi



if $WX_CONFIG_WITH_ARGS --cxxflags | grep -q WXMSW; then
    use_windows=yes
    
    changequote(<<,>>)
    RC_WX_INCLUDES=`echo " $WX_CPPFLAGS" | sed -e 's/ -[^I][^ ]*//g' | sed -e 's/ -I\([^ ]*\)/ --include-dir \1/g'`
    changequote([,])

    AM_CONDITIONAL(USE_KDE, test 0 = 1)
    AM_CONDITIONAL(USE_GNOME, test 0 = 1)
else
    use_windows=no
    FIND_KDE
    FIND_GNOME
fi

AM_CONDITIONAL(USE_WINDOWS, test $use_windows = yes)

if test x$USE_TRANSMEM != xno ; then
    AX_BERKELEY_DB(3.1,
    [
        AC_DEFINE(USE_TRANSMEM)
        AC_DEFINE_UNQUOTED(DB_HEADER, ["$DB_HEADER"])
        LIBS="$LIBS $DB_LIBS"

        AC_MSG_CHECKING([if db_open requires transaction argument])
        AC_TRY_COMPILE([#include "$DB_HEADER"],
            [
                DB *db;
                DBTYPE type;
                db->open(db, "foo", NULL, type, DB_CREATE, 0);
            ],
            [
                AC_MSG_RESULT(no)
            ],
            [
                AC_MSG_RESULT(yes)
                CXXFLAGS="$CXXFLAGS -DDB_OPEN_WITH_TRANSACTION"
            ])
                      
   ],
   [
      USE_TRANSMEM=no
      AC_MSG_WARN([cannot find Berkeley DB >= 3.1, poEdit will build w/o translation memory feature])
   ])
fi

CATALOGS_TO_INSTALL="install-poedit-catalogs"

if test x$USE_SEMISTATIC = xyes ; then
    CATALOGS_TO_INSTALL="$CATALOGS_TO_INSTALL install-wxstd-catalogs"

    changequote(<<,>>)

    dnl link libdb3 statically:
    dnl (FIXME - this only works with gcc and gnu ld!)
    LIBS=`echo $LIBS | sed -e 's/\(-ldb[^ ]*\)/-Wl,-Bstatic \1 -Wl,-Bdynamic/g'`

    dnl ...and don't link libtiff, libjpeg, because we don't use them:
    POEDIT_WX_LIBS=`echo $WX_LIBS_STATIC | sed -e 's/\(-ltiff\|-ljpeg\)//g'`

    changequote([,])
else
    POEDIT_WX_LIBS="$WX_LIBS"
fi

CXXFLAGS="$CXXFLAGS $DEBUG_FLAGS \"-DPOEDIT_PREFIX=\\\"$prefix\\\"\""



AC_SUBST(LDFLAGS)
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(RESCOMP)
AC_SUBST(WX_CONFIG_NAME)
AC_SUBST(POEDIT_WX_LIBS)
AC_SUBST(RC_WX_INCLUDES)
AC_SUBST(CATALOGS_TO_INSTALL)

AC_CONFIG_FILES([
         Makefile
         extras/Makefile
         extras/wx-contrib/Makefile
         extras/wx-contrib/src/Makefile
         extras/wx-contrib/src/xrc/Makefile
         extras/wx-contrib/src/xrc/expat/Makefile
         src/Makefile
         src/resources/Makefile
         locales/Makefile
         docs/Makefile
         docs/en/Makefile
         docs/hr/Makefile
         install/Makefile
         install/poedit.keys
         ])

AC_OUTPUT

if test "$USE_SEMISTATIC" = "no" ; then buildtype="dynamic" ; 
else buildtype="semistatic" ; fi

echo "
Configured $PACKAGE-$VERSION for $host

    build type:                 $buildtype
    debugging information:      $USE_DEBUG

    translation memory:         $USE_TRANSMEM
    spellchecking:              $USE_SPELLCHECKING
"
